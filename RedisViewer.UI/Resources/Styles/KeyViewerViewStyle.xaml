<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icons="clr-namespace:RedisViewer.UI.Controls.Icons;assembly=RedisViewer.UI.Controls.Icons"
                    xmlns:controls="http://schemas.imiyu.cc/controls"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <FontFamily x:Key="DefaultFont">Microsoft YaHei</FontFamily>

    <Style x:Key="LabelStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="Foreground" Value="#495057" />
    </Style>

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="Padding" Value="2,0" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="NameTemplateStyle" TargetType="{x:Type ContentControl}">
        <Border BorderThickness="1" BorderBrush="#C8C8C8" Background="#EAEAEA" UseLayoutRounding="True" SnapsToDevicePixels="True" Height="28">
            <StackPanel Orientation="Horizontal">
                <Border BorderThickness="0,0,1,0" BorderBrush="#C8C8C8" Padding="6,0" Width="55">
                    <TextBlock Text="{Binding Type, Converter={StaticResource KeyTypeConverter}}" Style="{StaticResource LabelStyle}" />
                </Border>
                <TextBox Text="{Binding Name}" Style="{StaticResource TextBoxStyle}" Width="180" />
            </StackPanel>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="TTLTemplateStyle" TargetType="{x:Type ContentControl}">
        <Border BorderThickness="1" BorderBrush="#C8C8C8" Background="#EAEAEA" UseLayoutRounding="True" SnapsToDevicePixels="True" Height="28">
            <StackPanel Orientation="Horizontal">
                <Border BorderThickness="0,0,1,0" BorderBrush="#C8C8C8" Padding="6,0" MinWidth="55">
                    <TextBlock Text="TTL" Style="{StaticResource LabelStyle}" />
                </Border>
                <TextBox Text="{Binding TTL, Converter={StaticResource KeyTtlConverter}}" Style="{StaticResource TextBoxStyle}" Width="120" />
            </StackPanel>
        </Border>
    </ControlTemplate>


    <!--<Border Grid.Column="0" Background="#EAEAEA" BorderBrush="#C8C8C8" BorderThickness="1" UseLayoutRounding="True"
                            SnapsToDevicePixels="True" Padding="8,0" Height="24">
        <TextBlock Text="Row" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" />
    </Border>
    <Border Grid.Column="1" Background="#EAEAEA" BorderBrush="#C8C8C8" BorderThickness="0,1,1,1" UseLayoutRounding="True"
                            SnapsToDevicePixels="True" Padding="8,0" Height="24">
        <TextBlock Text="Value" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" />
    </Border>-->

    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type controls:ListBoxItem}">
        <Setter Property="Padding" Value="6,0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="ListBoxStyle" TargetType="{x:Type controls:ListBox}">
        <Setter Property="BorderThickness" Value="1,0,1,1" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}" />
    </Style>



    <Style x:Key="FieldBgStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#EAEAEA" />
        <Setter Property="BorderBrush" Value="#C8C8C8" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,0" />
        <Setter Property="Height" Value="24" />
    </Style>

    <Style x:Key="FieldTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <DataTemplate x:Key="ListFooterTemplateStyle">
        <controls:Pagination MaxPageCount="{Binding DataContext.PageCount, RelativeSource={RelativeSource AncestorType={x:Type controls:ListBox}}}"  
                             PageIndex="{Binding DataContext.PageIndex, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type controls:ListBox}}}"
                             HorizontalAlignment="Left" MaxPageInterval="2" Margin="0,10,0,0" />
    </DataTemplate>

    <Style x:Key="ListSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="4" />
        <Setter Property="ShowsPreview" Value="True" />
        <Setter Property="ResizeDirection" Value="Rows" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions>

                        <Border Height="1" Background="#C8C8C8" Grid.Column="0" UseLayoutRounding="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                        <icons:FIcon Icon="Split" Grid.Column="1" VerticalAlignment="Top" />
                        <Border Height="1" Background="#C8C8C8" Grid.Column="2" UseLayoutRounding="True" SnapsToDevicePixels="True" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region List-->

    <!--Header template-->
    <DataTemplate x:Key="ListHeaderTemplateStyle">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--Index field-->
            <Border Grid.Column="0" Style="{StaticResource FieldBgStyle}">
                <TextBlock Text="Row" Grid.Column="0" Style="{StaticResource FieldTextStyle}" />
            </Border>

            <!--Value field-->
            <Border Grid.Column="1" Style="{StaticResource FieldBgStyle}" BorderThickness="0,1,1,1">
                <TextBlock Text="Value" Grid.Column="1" Style="{StaticResource FieldTextStyle}" />
            </Border>
        </Grid>
    </DataTemplate>

    <!--Data template-->
    <DataTemplate x:Key="ListDataTemplateStyle">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--Index field-->
            <TextBlock Text="{Binding Index}" Grid.Column="0" />

            <!--Value field-->
            <TextBlock Text="{Binding Value}" Grid.Column="1" />
        </Grid>
    </DataTemplate>

    <!--#endregion List-->

    <!--#region Zset-->

    <!--Header template-->
    <DataTemplate x:Key="ZsetHeaderTemplateStyle">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90" />
                <ColumnDefinition Width="5*" />
                <ColumnDefinition Width="5*" />
            </Grid.ColumnDefinitions>

            <!--Index field-->
            <Border Grid.Column="0" Style="{StaticResource FieldBgStyle}">
                <TextBlock Text="Row" Style="{StaticResource FieldTextStyle}" />
            </Border>

            <!--Value field-->
            <Border Grid.Column="1" Style="{StaticResource FieldBgStyle}" BorderThickness="0,1,1,1">
                <TextBlock Text="Value" Style="{StaticResource FieldTextStyle}" />
            </Border>

            <!--Score field-->
            <Border Grid.Column="2" Style="{StaticResource FieldBgStyle}" BorderThickness="0,1,1,1">
                <TextBlock Text="Score" Style="{StaticResource FieldTextStyle}" />
            </Border>
        </Grid>
    </DataTemplate>

    <!--Data template-->
    <DataTemplate x:Key="ZsetDataTemplateStyle">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90" />
                <ColumnDefinition Width="5*" />
                <ColumnDefinition Width="5*" />
            </Grid.ColumnDefinitions>

            <!--Index field-->
            <TextBlock Text="{Binding Index}" Grid.Column="0" />

            <!--Value field-->
            <TextBlock Text="{Binding Value}" Grid.Column="1" />

            <!--Score field-->
            <TextBlock Text="{Binding Score}" Grid.Column="2" Padding="6,0,0,0" />
        </Grid>
    </DataTemplate>

    <!--#endregion Zset-->


    <!--#region Hash-->

    <!--Header template-->
    <DataTemplate x:Key="HashHeaderTemplateStyle">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90" />
                <ColumnDefinition Width="5*" />
                <ColumnDefinition Width="5*" />
            </Grid.ColumnDefinitions>

            <!--Index field-->
            <Border Grid.Column="0" Style="{StaticResource FieldBgStyle}">
                <TextBlock Text="Row" Style="{StaticResource FieldTextStyle}" />
            </Border>

            <!--Key field-->
            <Border Grid.Column="1" Style="{StaticResource FieldBgStyle}" BorderThickness="0,1,1,1">
                <TextBlock Text="Key" Style="{StaticResource FieldTextStyle}" />
            </Border>

            <!--Value field-->
            <Border Grid.Column="2" Style="{StaticResource FieldBgStyle}" BorderThickness="0,1,1,1">
                <TextBlock Text="Value" Style="{StaticResource FieldTextStyle}" />
            </Border>
        </Grid>
    </DataTemplate>

    <!--Data template-->
    <DataTemplate x:Key="HashDataTemplateStyle">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90" />
                <ColumnDefinition Width="5*" />
                <ColumnDefinition Width="5*" />
            </Grid.ColumnDefinitions>

            <!--Index field-->
            <TextBlock Text="{Binding Index}" Grid.Column="0" />

            <!--Key field-->
            <TextBlock Text="{Binding Key}" Grid.Column="1" />

            <!--Value field-->
            <TextBlock Text="{Binding Value}" Grid.Column="2" Padding="6,0,0,0" />
        </Grid>
    </DataTemplate>

    <!--#endregion Hash-->

</ResourceDictionary>